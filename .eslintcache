[{"/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/index.js":"1","/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/App.js":"2","/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/components/homePage.js":"3","/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/components/HomePage.js":"4","/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/Context.js":"5","/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/contextlib.js":"6","/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/components/login.js":"7","/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/components/Login.js":"8","/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/components/Signup.js":"9","/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/components/header.js":"10","/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/components/Home.js":"11"},{"size":444,"mtime":1610934218507,"results":"12","hashOfConfig":"13"},{"size":753,"mtime":1610940560313,"results":"14","hashOfConfig":"13"},{"size":2413,"mtime":1610925410058,"results":"15","hashOfConfig":"13"},{"size":5447,"mtime":1610943778506,"results":"16","hashOfConfig":"13"},{"size":372,"mtime":1610935205548,"results":"17","hashOfConfig":"13"},{"size":86,"mtime":1610931444933,"results":"18","hashOfConfig":"13"},{"size":3170,"mtime":1610934655979,"results":"19","hashOfConfig":"13"},{"size":3482,"mtime":1610943778506,"results":"20","hashOfConfig":"13"},{"size":4095,"mtime":1610943778505,"results":"21","hashOfConfig":"13"},{"size":1173,"mtime":1610939748720,"results":"22","hashOfConfig":"13"},{"size":597,"mtime":1610941326838,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"dy0zng",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/index.js",[],["48","49"],"/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/App.js",[],"/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/components/homePage.js",["50"],"/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/components/HomePage.js",["51"],"import React, { useState, useContext } from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport axios from 'axios';\nimport { InputGroup, Button } from 'reactstrap';\nimport { Navbar} from 'react-bootstrap';\nimport {AppContext} from \"../contextlib\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/homepage.css';\n\nconst HomePage = () => {\n\n    const history = useHistory()\n    const { currentUser, setCurrentUser } = useContext(AppContext);\n    \n    const [ movie, setMovie ] = useState(\"\")\n    const [ results, setResults ] = useState([])\n    const [ searchState, setSearchState ] = useState(false)\n    const [ nominated, setNominated ] = useState(currentUser.nominations)\n    const [ notFound, setNotFound ] = useState(false)\n\n    const searchMovie = (movie) => {\n        console.log(movie)\n        axios.get(`http://www.omdbapi.com/?s=${movie}&apikey=d959d59b`).then((res) => {\n            if(res.data.Search){\n                setResults(res.data.Search)\n                console.log(res.data.Search)\n                setNotFound(false)\n            }else{\n                setNotFound(true)\n            }\n            setSearchState(true)\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    const checkNominated = (movie) => {\n        for(let i = 0; i<nominated.length; i++){\n            if(nominated[i] === movie){\n                return false\n            }\n        }\n        return true\n    }\n\n    const nominate = (movie) => {\n        if(checkNominated(movie)){\n            setNominated(new Array(...nominated, movie))\n        }else{\n            alert(\"This movie has already been nominated!\")\n        }\n    }\n\n    const remove = (movie) => {\n        let arr = [...nominated]\n        let index = arr.indexOf(movie)\n        if (index !== -1) {\n            arr.splice(index, 1);\n            setNominated(arr);\n          }\n    }\n\n    const auth = () => {\n        if(!currentUser.username){\n            if(nominated.length === 0){\n                alert(\"You haven't nominated anything yet, try to find something you like!\")\n            }else{\n                setCurrentUser({ username: null, nominations: nominated})\n                history.push('/signup')\n            }\n        } else {\n            axios.post('https://moviefindershopifyapi.herokuapp.com/users/update', { username: currentUser.username, nominations: nominated}).then(\n                (res) => {\n                    console.log(res)\n                    alert(\"Your nomination list has been stored!\")\n                    setCurrentUser({ username: currentUser.username, nominations: nominated})\n                    history.push('/')\n                }\n            ).catch((err) => { console.log(err) })\n        }\n    }\n\n    return (\n        <div className=\"cont1\">\n            <div className=\"navbarrr\">\n            <Navbar bg=\"light\">\n                <Navbar.Brand> Nominate Your Favourite Films </Navbar.Brand>\n                {currentUser.username &&\n                    <div>\n                        <p className=\"welcome1\">Welcome {currentUser.username}!</p>\n                        <Button className=\"logout\"\n                            onClick={() => {\n                            setCurrentUser({email: null, nominations: [{}]})\n                            history.push(\"/\")\n                        }}>\n                        Logout\n                        </Button>\n                    </div>\n                }\n            </Navbar>\n            </div>\n            <div>\n                <InputGroup className=\"mb-3\">\n                    <input\n                    placeholder=\"Movie Name\"\n                    value={movie}\n                    onChange={e => { \n                        setMovie(e.target.value)\n                        setSearchState(false)\n                    }}\n                />\n                <Button variant=\"outline-secondary\" onClick={() => {searchMovie(movie)}}>Search</Button>\n                </InputGroup>\n            </div>\n            <div className=\"navbar2\">\n                <div>\n                    <h1>Search results for: {searchState && movie}</h1>\n                    { notFound && <h2>No results found ...</h2>}\n                    <ul>\n                    {\n                        searchState && results.map( (movie) =>  (\n                            <div key={movie.imdbID}>\n                                <li>{movie.Title}</li>\n                                <Button onClick={() => {nominate(movie)}}>Nominate</Button>\n                            </div>\n                        ))\n                    }\n                    </ul>\n                </div>\n                <div>\n                    <div>\n                        <h1>Nominated Films</h1>\n                        <ul>\n                            {\n                                nominated.map( (movie) =>  (\n                                    <div key={movie.imdbID}>\n                                        <li>{movie.Title}</li>\n                                        <Button onClick={() => {remove(movie)}}>Remove</Button>\n                                    </div>\n                                ))\n                            } \n                        </ul>\n                    </div>\n                    <div>\n                        <Button onClick={() => {auth()}}>Save Nomination List</Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HomePage;","/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/Context.js",[],"/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/contextlib.js",[],"/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/components/login.js",["52","53"],"/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/components/Login.js",[],"/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/components/Signup.js",[],"/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/components/header.js",[],"/Users/allan/Projects/Shopify_Coding_Challenge/movie_finder/src/components/Home.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":41,"column":57,"nodeType":"60","messageId":"61","endLine":41,"endColumn":59},{"ruleId":"62","severity":1,"message":"63","line":48,"column":26,"nodeType":"64","messageId":"65","endLine":48,"endColumn":56},{"ruleId":"66","severity":2,"message":"67","line":15,"column":32,"nodeType":"68","messageId":"69","endLine":15,"endColumn":42},{"ruleId":"66","severity":2,"message":"70","line":15,"column":43,"nodeType":"68","messageId":"69","endLine":15,"endColumn":53},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-undef","'useContext' is not defined.","Identifier","undef","'AppContext' is not defined.","no-global-assign","no-unsafe-negation"]